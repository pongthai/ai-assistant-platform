from pathlib import Path
import json
from server.mira.models.order import OrderStatus

from core.utils.logger_config import get_logger
logger = get_logger(__name__)

# Load menu and promotions once at startup
MENU_PATH = Path("server/mira/data/menu.json")
PROMO_PATH = Path("server/mira/data/promotions.json")
RECOMMENDATIONS_PATH = Path("server/mira/data/recommendations.json")

with MENU_PATH.open("r", encoding="utf-8") as f:
    MENU_DATA = json.load(f)

with PROMO_PATH.open("r", encoding="utf-8") as f:
    PROMOTIONS = json.load(f)

with RECOMMENDATIONS_PATH.open("r", encoding="utf-8") as f:
    RECOMMENDATIONS = json.load(f)


class PromptBuilder:
    def __init__(self):
        logger.info("Initialzing PromptBuilder")
        self.menu = MENU_DATA
        self.promotions = PROMOTIONS
        self.recommendations = RECOMMENDATIONS

    def build_init_prompt(self):
        logger.debug("enter build_init_prompt")
        menu_items = "\n".join(
            [f"- {item['name']} ({item['price']} ‡∏ö‡∏≤‡∏ó)" for item in self.menu]
        )
        promo_text = "\n".join([f"- {p}" for p in self.promotions])

        intent_list = """
          üîπ ‡∏´‡∏°‡∏ß‡∏î Action:
          - greeting: ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
          - call_staff: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
          - request_bill: ‡∏Ç‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏¥‡∏•
          - payment_method: ‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô

          üîπ ‡∏´‡∏°‡∏ß‡∏î Order:
          - add_order: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå
          - cancel_order: ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
          - modify_order: ‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          - confirm_order: ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠

          üîπ ‡∏´‡∏°‡∏ß‡∏î Information:
          - show_menu: ‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          - show_promotion: ‡∏Ç‡∏≠‡∏ó‡∏£‡∏≤‡∏ö‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô
          - recommend_dish: ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π
          - suggest_combo: ‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß

          üîπ ‡∏´‡∏°‡∏ß‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÜ:
          - proactive_suggestion: ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∏‡∏Å
          - open_topic: ‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
          - unknown: ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          """.strip()
        

        logger.debug(f"menu_items: {menu_items}") 

        return f"""
          ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ MIRA ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏ö‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏û‡∏π‡∏î‡∏à‡∏≤‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ SSML ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô  
          ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:
          - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
          - ‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå
          - ‡πÅ‡∏à‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∏‡∏Å
          - ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

          ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô **JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô** ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà Markdown ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏Å JSON
          ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ ``` ‡∏´‡∏£‡∏∑‡∏≠ ```json ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

          ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏π‡∏î ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ SSML:
          <speak><prosody rate="108%" pitch="+1st">...</prosody></speak> ‡∏û‡∏£‡πâ‡∏≠‡∏° <break time="300ms"/>

          ### ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ intent ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:
          {intent_list}

          ### ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:
          - ‡∏´‡πâ‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà  
          - ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô  

          ### ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
          {{
            "intent": "add_order",
            "item": {{ "name": "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á", "qty": 1 }},
            "response": "<speak><prosody rate='110%' pitch='+1st'>‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á 1 ‡∏ó‡∏µ‡πà‡∏ô‡∏∞‡∏ï‡∏∞ <break time='300ms'/> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏µ‡∏Å‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?</prosody></speak>"
          }}

          ### ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£:
          {menu_items}

          ### ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô:
          {promo_text}

          ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
          - ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏ä‡πà‡∏ô "‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ö‡πâ‡∏≤‡∏á", "‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏∞‡πÑ‡∏£" ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ **‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á 2‚Äì3 ‡πÄ‡∏°‡∏ô‡∏π + ‡∏ä‡∏ß‡∏ô‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á**
          - ‡∏´‡πâ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
          - ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∏‡∏Å ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ intent = proactive_suggestion
          """.strip()

    def _get_recommendations_from_order(self, order_list):
        if not order_list:
            return ""
        suggested = []
        for item in order_list:
            item_id = getattr(item, "id", None)
            if not item_id:
                continue
            recs = self.recommendations.get("based_on_order", {}).get(item_id, [])
            for rec in recs:
                suggested.append(f"- {rec['id']}: {rec['reason']}")
        if suggested:
            return "\n\n‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á:\n" + "\n".join(suggested)
        return ""

    @staticmethod
    def aggregate_order(order_list):
        from collections import defaultdict
        counter = defaultdict(int)
        for item in order_list:
            logger.debug(f"aggregate_order : order=[{getattr(item, 'name', None)},  {getattr(item, 'qty', 1)}, {getattr(item, 'status', None)}] ")
            if getattr(item, "status", None) == OrderStatus.canceled:
                continue
            name = getattr(item, "name", None)
            qty = getattr(item, "qty", 1)
            counter[name] += qty
        return [f"- {name} x {qty}" for name, qty in counter.items()]

    def build_user_prompt(self, user_input, order_list=None):
        logger.debug("enter build_user_prompt")

        order_text = ""
        if order_list:
            aggregated = self.aggregate_order(order_list)
            order_text = "\n\n‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß:\n" + "\n".join(aggregated)
        recommendation_text = self._get_recommendations_from_order(order_list)

        return f"""
### ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó
‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {user_input}

{order_text}
{recommendation_text}

### ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:
‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ intent ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô  
- intent ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ (‡∏ï‡∏≤‡∏° system prompt)  
- ‡∏´‡πâ‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ intent ‡πÉ‡∏´‡∏°‡πà  
- ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏Å JSON  
- ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ ``` ‡∏´‡∏£‡∏∑‡∏≠ ```json ‡∏Ñ‡∏£‡∏≠‡∏ö JSON  
- ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ intent = proactive_suggestion

### ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î:
‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏π‡∏î ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ:
<speak><prosody rate="110%" pitch="+1st">...</prosody></speak>  
‡∏û‡∏£‡πâ‡∏≠‡∏° <break time="300ms"/> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞

### ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
{{
  "intent": "greeting",
  "response": "<speak><prosody rate='110%' pitch='+1st'>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞</prosody></speak>"
}}
""".strip()