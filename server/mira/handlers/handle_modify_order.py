

from server.mira.models.order import OrderItem
from server.mira.services.session_manager import session_manager
from core.utils.logger_config import get_logger
from server.mira.services.menu import validate_item, lookup_price

logger = get_logger(__name__) 

def handle_modify_order(session_id: str, gpt_result: dict) -> str:
    if "item" not in gpt_result:
        logger.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• item ‡πÉ‡∏ô gpt_result")
        return "<speak><prosody rate='108%' pitch='+1st'>‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞</prosody></speak>"

    item_data = gpt_result["item"]
    if isinstance(item_data, dict):
        item_data = [item_data]

    success_count = 0
    for item in item_data:
        name = item.get("name")
        qty = item.get("qty")

        if not name or qty is None:
            continue

        if not validate_item(name):
            continue

        if qty <= 0:
            # Remove item
            session_manager.remove_order_item(session_id, name)
            logger.info(f"üóëÔ∏è Removed order item: {name}")
        else:
            price = lookup_price(name)
            if price is None:
                continue
            updated_item = OrderItem(name=name, qty=qty, price=price)
            session_manager.update_order_item(session_id, updated_item)
            logger.info(f"‚úèÔ∏è Modified order item: {updated_item}")
        success_count += 1

    if success_count == 0:
        return "<speak><prosody rate='108%' pitch='+1st'>‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞</prosody></speak>"
    else:
        return "<speak><prosody rate='108%' pitch='+1st'>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞</prosody></speak>"