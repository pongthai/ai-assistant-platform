from server.mira.handlers.base_handler import BaseIntentHandler
from server.mira.services.menu import lookup_price, validate_item
from server.mira.models.order import OrderItem
from server.mira.models.response import build_response
from core.utils.logger_config import get_logger

logger = get_logger(__name__)

def handle_suggest_combo(session_id: str, session_manager, gpt_result: dict):
    current_order = session_manager.get_order_list(session_id)
    if not current_order:
        logger.warning("üß† ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°")
        return build_response(
            intent="suggest_combo",
            ssml_response="<speak><prosody rate='108%' pitch='+1st'>‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏±‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏î‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞</prosody></speak>"
        )

    # Mock recommendation logic: suggest dessert if drink already ordered
    suggested_items = []
    drink_keywords = ["‡∏ä‡∏≤", "‡∏Å‡∏≤‡πÅ‡∏ü", "‡∏ô‡∏°", "‡πÇ‡∏Å‡πÇ‡∏Å‡πâ"]
    dessert_keywords = ["‡πÄ‡∏Ñ‡πâ‡∏Å", "‡∏û‡∏≤‡∏¢", "‡∏Ñ‡∏£‡∏±‡∏ß‡∏ã‡∏≠‡∏á‡∏ï‡πå"]

    for order_item in current_order:
        for drink in drink_keywords:
            if drink in order_item.name:
                # Suggest dessert
                for menu_item in ["‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡πá‡∏≠‡∏Å‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", "‡∏û‡∏≤‡∏¢‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏•", "‡∏Ñ‡∏£‡∏±‡∏ß‡∏ã‡∏≠‡∏á‡∏ï‡πå‡πÄ‡∏ô‡∏¢"]:
                    if validate_item(menu_item):
                        suggested_items.append(menu_item)
                break

    if not suggested_items:
        return build_response(
            intent="suggest_combo",
            ssml_response="<speak><prosody rate='108%' pitch='+1st'>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞</prosody></speak>"
        )

    suggested_text = "‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡∏•‡∏≠‡∏á‡∏™‡∏±‡πà‡∏á " + " ‡∏´‡∏£‡∏∑‡∏≠ ".join(suggested_items) + " ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡∏π‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?"
    return build_response(
        intent="suggest_combo",
        ssml_response=f"<speak><prosody rate='108%' pitch='+1st'>{suggested_text}</prosody></speak>"
    )
